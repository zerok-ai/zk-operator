apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: zk-client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zk-operator
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app: zk-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app: zk-operator
    spec:
      initContainers:
        - command:
            - sh
            - -c
            - 'set -xe; URL="${PROTOCOL}://${SERVICE_NAME}:${SERVICE_PORT}${HEALTH_PATH}";
              until [ $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ];
              do echo "waiting for ${URL}"; sleep 2; done;'
          name: wsp-wait
          env:
            - name: PROTOCOL
              value: http
            - name: SERVICE_NAME
              value: zk-wsp-client.zk-client.svc.cluster.local
            - name: SERVICE_PORT
              value: "8987"
            - name: HEALTH_PATH
              value: "/healthz"
          image: gcr.io/pixie-oss/pixie-dev-public/curl:multiarch-7.87.0@sha256:f7f265d5c64eb4463a43a99b6bf773f9e61a50aaa7cefaf564f43e42549a01dd
          imagePullPolicy: IfNotPresent
          resources: { }
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      containers:
      - image: controller:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8472
        volumeMounts:
          - name: zk-operator-config
            mountPath: /opt
        env:
        - name: "CONFIG_FILE"
          value: "/opt/operator-config.yaml"
        - name: "POD_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "ZK_REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "redis"
              key: "redis-password"
        - name: "ZK_REDIS_HOST" # Setting Redis password from Secret
          valueFrom:
            configMapKeyRef:
              name: "zk-redis-config"
              key: "redisHost"
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: zk-operator
      terminationGracePeriodSeconds: 10
      volumes:
        - name: zk-operator-config
          configMap:
            name: zk-operator
